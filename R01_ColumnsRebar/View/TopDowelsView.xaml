<UserControl x:Class="R01_ColumnsRebar.View.TopDowelsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="890" d:DesignWidth="360"
             Background="White"
             x:Name="TopDowelsUC"
             >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadTopDowelsViewCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary Source="./../Library/Resource/Styles.xaml"></ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="230"></RowDefinition>
                    <RowDefinition Height="170"></RowDefinition>
                    <RowDefinition Height="360"></RowDefinition>
                    <RowDefinition ></RowDefinition>
                   
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Margin="5" Header="Column Property">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <Grid  Height="40">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="Column No"></TextBlock>
                                <ComboBox Grid.Column="1" Style="{StaticResource ComboBoxStyle}" 
                          ItemsSource="{Binding ColumnsModel.BarMainModels}" DisplayMemberPath="NumberColumn"
                          SelectedItem="{Binding SelectedColumn,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                          SelectedIndex="{Binding ColumnsModel.SelectedIndexModel.SelectedColumn}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding SelectionColumnDowelsChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <Button Grid.Column="2" Grid.ColumnSpan="2" Style="{StaticResource ButtonStyle}" Width="120" Content="Apply All Bar"
                            Command="{Binding ApplyAllBarCommand}" CommandParameter="{Binding ElementName=MainWindow}"
                            ></Button>
                            </Grid>
                            <Grid >
                                <ListView  ItemsSource="{Binding SelectedColumn.BarModels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedItem="{Binding SelectedBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedIndex="{Binding ColumnsModel.SelectedIndexModel.SelectedMainBar}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding SelectionBarChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListView.View>
                                        <GridView  >
                                            <GridViewColumn  Width="50" Header="Bar No" DisplayMemberBinding="{Binding BarNumber}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="Top" DisplayMemberBinding="{Binding IsTopDowels}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="Type" DisplayMemberBinding="{Binding TopDowels}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="La" DisplayMemberBinding="{Binding LaTopDowels}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="Lb" DisplayMemberBinding="{Binding LbTopDowels}"></GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                            
                        </StackPanel>
                    </ScrollViewer>


                </GroupBox>
                <GroupBox Grid.Row="1" Margin="5" Header="Top Dowels Property">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*"></ColumnDefinition>
                            <ColumnDefinition Width="0.4*"></ColumnDefinition>
                            <ColumnDefinition Width="0.3*"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="35"></RowDefinition>
                            
                        </Grid.RowDefinitions>

                        <CheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"  Style="{StaticResource CheckBoxStyle}" Content="Top Dowels"
                           IsEnabled="{Binding IsEnabledTopDowels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                          IsChecked="{Binding SelectedBar.IsTopDowels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                          Command="{Binding CheckTopDowelsCommand}" CommandParameter="{Binding ElementName=MainWindow}"
                          ></CheckBox>
                        <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="La" x:Name="TopDowelsLaTextBlock"></TextBlock>
                        <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedBar.LaTopDowels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="TopDowelsLaTextBox">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding TopDowelsLaTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBlock Grid.Row="1" Grid.Column="2" Style="{StaticResource TextBlockUnit}" x:Name="TopDowelsLaTextBlockUnit" ></TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="Lb" x:Name="TopDowelsLbTextBlock"></TextBlock>
                        <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedBar.LbTopDowels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="TopDowelsLbTextBox">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding TopDowelsLbTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBlock Grid.Row="2" Grid.Column="2" Style="{StaticResource TextBlockUnit}" x:Name="TopDowelsLbTextBlockUnit" ></TextBlock>

                        <TextBlock Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="3" Style="{StaticResource DataGridTextBlockCenter}" Text="Top Type" ></TextBlock>
                        <ComboBox Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="3" Grid.RowSpan="3" Style="{StaticResource ComboBoxStyle}" 
                                          IsEnabled="{Binding IsEnabledTopTypeDowels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                          SelectedIndex="{Binding SelectedBar.TopDowels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectionTopTypeDowelsChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ComboBoxItem>
                                <Canvas Width="140" Height="90" x:Name="TopDowelsTypeCanvas0"></Canvas>
                            </ComboBoxItem>
                            <ComboBoxItem>
                                <Canvas Width="140" Height="90" x:Name="TopDowelsTypeCanvas1"></Canvas>
                            </ComboBoxItem>
                        </ComboBox>
                        <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Width="150" Style="{StaticResource ButtonStyle}" Content="Fixed to Up Column"
                           x:Name="FixedTop" 
                         
                          Command="{Binding FixedTopBarDowelsCommand}" CommandParameter="{Binding ElementName=MainWindow}"
                          ></Button>
                        
                        

                    </Grid>
                </GroupBox>
                <Canvas Grid.Row="2" Margin="5" x:Name="CanvasSection"></Canvas>
                <GroupBox Grid.Row="3"  x:Name="GridAddBarDowels" Header="Add TopBar Dowels" Visibility="Collapsed">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.3*"></ColumnDefinition>
                                    <ColumnDefinition Width="0.4*"></ColumnDefinition>
                                    <ColumnDefinition Width="0.3*"></ColumnDefinition>
                                    <ColumnDefinition Width="0.3*"></ColumnDefinition>
                                    <ColumnDefinition Width="0.4*"></ColumnDefinition>
                                    <ColumnDefinition Width="0.3*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"></RowDefinition>
                                    <RowDefinition Height="35"></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                    <RowDefinition Height="35"></RowDefinition>
                                    <RowDefinition Height="35"></RowDefinition>
                                    <RowDefinition Height="35"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" x:Name="BarXTextBlock" Style="{StaticResource DataGridTextBlockCenter}" Text="n">
                                        <Run BaselineAlignment="Subscript">x</Run>
                                </TextBlock>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="BarXComboBox" Style="{StaticResource ComboBoxStyle}"
                                  ItemsSource="{Binding ColumnsModel.AllNumberBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedItem="{Binding SelectedColumn.nxA,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  IsEnabled="{Binding IsLock,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  >
                                </ComboBox>
                                <TextBlock Grid.Row="0" Grid.Column="3" x:Name="BarYTextBlock" Style="{StaticResource DataGridTextBlockCenter}" Text="n">
                                     <Run BaselineAlignment="Subscript">y</Run>
                                </TextBlock>
                                <ComboBox Grid.Row="0" Grid.Column="4" x:Name="BarYComboBox" Style="{StaticResource ComboBoxStyle}"
                                  ItemsSource="{Binding ColumnsModel.AllNumberBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedItem="{Binding SelectedColumn.nyA,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  IsEnabled="{Binding IsLock,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                </ComboBox>
                                <TextBlock Grid.Row="0" Grid.Column="0" x:Name="BarDTextBlock" Style="{StaticResource DataGridTextBlockCenter}" Text="n">
                                     <Run BaselineAlignment="Subscript">D</Run>
                                </TextBlock>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="BarDComboBox" Style="{StaticResource ComboBoxStyle}"
                                 ItemsSource="{Binding ColumnsModel.AllNumberBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedItem="{Binding SelectedColumn.ndA,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  IsEnabled="{Binding IsLock,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                </ComboBox>
                                <TextBlock Grid.Row="1" Grid.Column="0"  Style="{StaticResource DataGridTextBlockCenter}" Text="Bar">
                                </TextBlock>
                                <ComboBox Grid.Row="1" Grid.Column="1"  Style="{StaticResource ComboBoxStyle}"
                                  ItemsSource="{Binding ColumnsModel.AllBars}" DisplayMemberPath="Type"
                                  SelectedItem="{Binding SelectedColumn.AddBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedIndex="{Binding SelectedColumn.SelectedAddBarType,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  IsEnabled="{Binding IsLock,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                          >
                                </ComboBox>
                                <TextBlock Grid.Row="1" Grid.Column="3"  Style="{StaticResource DataGridTextBlockCenter}" Text="Ø = ">
                                </TextBlock>
                                <TextBlock Grid.Row="1" Grid.Column="4"  Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding SelectedRebarBarModel.Diameter}"></TextBlock>
                                <TextBlock Grid.Row="1" Grid.Column="5" Style="{StaticResource TextBlockUnit}"></TextBlock>

                                <Canvas Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="3" Grid.RowSpan="3" x:Name="CanvasAddBar"></Canvas>

                                <TextBlock Grid.Row="3" Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="L1" ></TextBlock>
                                <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedAddBar.L1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="L1AddBar"
                                         
                                         >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding L1AddBarTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBlock Grid.Row="3" Grid.Column="2" Style="{StaticResource TextBlockUnit}" ></TextBlock>
                                <TextBlock Grid.Row="4" Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="L2" ></TextBlock>
                                <TextBox Grid.Row="4" Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedAddBar.L2,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="L2AddBar"
                                         
                                         >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding L2AddBarTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBlock Grid.Row="4" Grid.Column="2" Style="{StaticResource TextBlockUnit}" ></TextBlock>
                                <TextBlock Grid.Row="5" Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="L3" ></TextBlock>
                                <TextBox Grid.Row="5" Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedAddBar.L3,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"   x:Name="L3AddBar"
                                         
                                         >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding L3AddBarTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBlock Grid.Row="5" Grid.Column="2" Style="{StaticResource TextBlockUnit}" ></TextBlock>
                                <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"  Style="{StaticResource ButtonStyle}" Content="Apply" Command="{Binding ApplyCommand}" CommandParameter="{Binding ElementName=MainWindow}"></Button>
                                <Button Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="3"  Style="{StaticResource ButtonStyle}" Content="Modify" Command="{Binding ModifyCommand}" CommandParameter="{Binding ElementName=MainWindow}"></Button>
                            </Grid>
                            <Grid Grid.Row="1" >
                                <ListView ItemsSource="{Binding SelectedColumn.AddBarModels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"    x:Name="AddBarListView"
                                  SelectedItem="{Binding SelectedAddBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  SelectedIndex="{Binding ColumnsModel.SelectedIndexModel.SelectedAddBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding SelectionAddBarChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListView.View>
                                        <GridView  >
                                            <GridViewColumn  Width="50" Header="Bar No" DisplayMemberBinding="{Binding BarNumber}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="Bar" DisplayMemberBinding="{Binding Bar.Type}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="L1" DisplayMemberBinding="{Binding L1}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="L2" DisplayMemberBinding="{Binding L2}"></GridViewColumn>
                                            <GridViewColumn Width="50" Header="L3" DisplayMemberBinding="{Binding L3}"></GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                        </Grid>

                    </ScrollViewer>

                </GroupBox>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
