<UserControl x:Class="R11_FoundationPile.View.ReinforcementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            mc:Ignorable="d" 
             d:DesignHeight="890" d:DesignWidth="360"
             Background="White"
             x:Name="ReinforcementUC"
             >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadReinforcementViewCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/WpfCustomControls;component/Resource/Styles.xaml"></ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="210"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Margin="5" Header="{Binding Languages.R11_Language.ReinforcementLanguage.ListFoundation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                    <StackPanel>
                        <DockPanel LastChildFill="False" Height="35">
                            <TextBlock Text="{Binding Languages.R11_Language.ReinforcementLanguage.GroupFoundation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Width="100" Style="{StaticResource DataGridTextBlockCenter}" ></TextBlock>
                            <ComboBox  Width="100" Style="{StaticResource ComboBoxStyle}"
                                  ItemsSource="{Binding FoundationPileModel.FoundationBarModels}"  DisplayMemberPath="Type"
                                  SelectedItem="{Binding SelectedFoundationBarModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                       SelectedIndex="{Binding FoundationPileModel.SelectedIndexModel.SelectedIndexFoundationBarModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  
                                  >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectionChangedFoundationBarModelCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <!--<TextBlock Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding Languages.R11_Language.ReinforcementLanguage.Representative,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></TextBlock>-->
                            <TextBlock  Style="{StaticResource DataGridTextBlockCenter}" Margin="10 0 0 0" Foreground="Red" FontWeight="Bold" FontSize="15" Text="{Binding SelectedFoundationBarModel.LocationName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></TextBlock>
                        </DockPanel>
                        <DockPanel LastChildFill="False" Height="35">
                            <TextBlock Text="{Binding Languages.R11_Language.ReinforcementLanguage.SpanOrientation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Width="100" Style="{StaticResource DataGridTextBlockCenter}" ></TextBlock>
                            <ComboBox Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Width="100" Style="{StaticResource ComboBoxStyle}" x:Name="OrientationComboBox"
                                  ItemsSource="{Binding AllSpans}"  
                                  SelectedItem="{Binding SelectedFoundationBarModel.SpanOrientation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                  >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectionChangedSpanOrientationCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <Button Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="3"  Style="{StaticResource ButtonStyle}" Width="100" Content="{Binding Languages.R11_Language.ReinforcementLanguage.ApplyAll,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    Command="{Binding ApplyAllFoundationCommand}" CommandParameter="{Binding ElementName=MainWindow}" 
                                    ></Button>
                        </DockPanel>
                    </StackPanel>

                </GroupBox>
                <GroupBox Grid.Row="1" Margin="5" Header="{Binding Languages.R11_Language.ReinforcementLanguage.ListBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                    <StackPanel>
                        <Grid Height="200">
                            <ListView  ItemsSource="{Binding SelectedFoundationBarModel.BarModels,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    SelectedItem="{Binding SelectedBarModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     SelectedIndex="{Binding FoundationPileModel.SelectedIndexModel.SelectedIndexBarModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  
                                  >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectionChangedBarModelCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListView.View>
                                    <GridView   >
                                        <GridViewColumn  Width="145" Header="{Binding Languages.GeneralLanguage.NameBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberBinding="{Binding Name}"></GridViewColumn>
                                        <GridViewColumn Width="40" Header="{Binding Languages.GeneralLanguage.Bar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberBinding="{Binding Bar.Type}"></GridViewColumn>
                                        <GridViewColumn Width="45" Header="{Binding Languages.GeneralLanguage.Distance,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberBinding="{Binding Distance}" ></GridViewColumn>
                                        <GridViewColumn Width="35" Header="{Binding Languages.GeneralLanguage.NumberBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberBinding="{Binding Number}" ></GridViewColumn>
                                        <GridViewColumn Width="45" Header="{Binding Languages.R11_Language.ReinforcementLanguage.IsModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberBinding="{Binding IsModel}" ></GridViewColumn>
                                        
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                        <Grid Height="Auto">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"></RowDefinition>
                                <RowDefinition Height="35"></RowDefinition>
                                <RowDefinition Height="35"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="65"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="65"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Style="{StaticResource CheckBoxStyle}" Content="{Binding Languages.R11_Language.ReinforcementLanguage.IsModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" IsChecked="{Binding SelectedBarModel.IsModel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" IsEnabled="{Binding IsEnabled,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                         Command="{Binding CheckModelCommand}"  CommandParameter="{Binding ElementName=MainWindow}"
                                      >
                            </CheckBox>
                            <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding Languages.GeneralLanguage.Bar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="BarTextBlock"></TextBlock>
                            <ComboBox Grid.Row="1" Grid.Column="1" Style="{StaticResource ComboBoxStyle}" x:Name="BarComboBox"
                                       ItemsSource="{Binding FoundationPileModel.AllBars}" DisplayMemberPath="Type"
                                      SelectedItem="{Binding SelectedBarModel.Bar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectionChangedBarCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding Languages.GeneralLanguage.HookLength,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="HookLengthTextBlock"></TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="4" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedBarModel.HookLength,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"   x:Name="HookLengthTextBox">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:InvokeCommandAction Command="{Binding HookLengthTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="5" Style="{StaticResource TextBlockUnit}" x:Name="HookLengthTextBlockUnit"></TextBlock>

                            <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="4" Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding FoundationPileModel.SettingModel.SelectedHook.Name}" x:Name="HookTypeTextBlock"></TextBlock>

                            <TextBlock Grid.Row="2" Grid.Column="0"  Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding Languages.GeneralLanguage.Distance,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="DistanceTextBlock"></TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedBarModel.Distance,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  x:Name="DistanceTextBox">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:InvokeCommandAction Command="{Binding DistanceTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <TextBlock Grid.Row="2" Grid.Column="2" Style="{StaticResource TextBlockUnit}" x:Name="DistanceTextBlockUnit"></TextBlock>
                            
                            
                            <Button Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="3"  Style="{StaticResource ButtonStyle}" Width="100" Content="{Binding Languages.R11_Language.ReinforcementLanguage.FixNumber,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                    Command="{Binding FixedNumberBarCommand}" CommandParameter="{Binding ElementName=MainWindow}"   x:Name="FixNumberButton"
                                    ></Button>

                            <TextBlock Grid.Row="2" Grid.Column="3"   Style="{StaticResource DataGridTextBlockCenter}" Text="{Binding Languages.GeneralLanguage.LayerBar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="NumberTextBlock" ></TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="4" Text="{Binding SelectedBarModel.Layer,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  Style="{StaticResource TextBoxStyle}" x:Name="NumberTextBox" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:InvokeCommandAction Command="{Binding NumberBarTextChangedCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                           
                        </Grid>
                    </StackPanel>

                </GroupBox>
                <Canvas Grid.Row="3" Margin="5" x:Name="BarCanvas"></Canvas>
               
            </Grid>
        </ScrollViewer>

    </Grid>
</UserControl>
