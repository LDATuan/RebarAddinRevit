<Window x:Name="MainWindow" x:Class="R11_FoundationPile.FoundationPileWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:view="clr-namespace:R11_FoundationPile.View"
        xmlns:viewModel="clr-namespace:R11_FoundationPile.ViewModel"
         xmlns:custom="clr-namespace:WpfCustomControls.CustomControls;assembly=WpfCustomControls"
        xmlns:customViewModel="clr-namespace:WpfCustomControls.ViewModel;assembly=WpfCustomControls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="R11_FoundationPile" 
        ResizeMode="NoResize" 
        ShowInTaskbar="true" 
        WindowStartupLocation="CenterScreen"
        Height="975" Width="1400"
        Topmost="false"
        FontSize="11"
       
        FontFamily="Tahoma"
        Background="#f0ebeb"
        WindowStyle="None"
        AllowsTransparency="True"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadWindowCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WpfCustomControls;component/Resource/Styles.xaml"></ResourceDictionary>
                <ResourceDictionary>
                    <DataTemplate x:Name="settingViewModel" DataType="{x:Type viewModel:SettingViewModel}">
                        <view:SettingView></view:SettingView>
                    </DataTemplate>
                    <DataTemplate x:Name="gometryViewModel" DataType="{x:Type viewModel:GeometryViewModel}">
                        <view:GeometryView></view:GeometryView>
                    </DataTemplate>
                    <DataTemplate x:Name="reinforcementViewModel" DataType="{x:Type viewModel:ReinforcementViewModel}">
                        <view:ReinforcementView></view:ReinforcementView>
                    </DataTemplate>
                    <DataTemplate x:Name="pileDetailViewModel" DataType="{x:Type viewModel:PileDetailViewModel}">
                        <view:PileDetailView></view:PileDetailView>
                    </DataTemplate>
                    <DataTemplate x:Name="taskBarViewModel" DataType="{x:Type customViewModel:TaskBarViewModel}">
                        <custom:TaskBarControl></custom:TaskBarControl>
                    </DataTemplate>
                    <DataTemplate x:Name="statusBarViewModel" DataType="{x:Type customViewModel:StatusBarViewModel}">
                        <custom:StatusBarControl></custom:StatusBarControl>
                    </DataTemplate>
                    <DataTemplate x:Name="actionViewModel" DataType="{x:Type customViewModel:ActionViewModel}">
                        <custom:ActionControl></custom:ActionControl>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <ContentControl Content="{Binding TaskBarViewModel}"></ContentControl>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180"></ColumnDefinition>
                <ColumnDefinition Width="360"></ColumnDefinition>
                <ColumnDefinition ></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>

                <RowDefinition></RowDefinition>
                <RowDefinition Height="45"></RowDefinition>
            </Grid.RowDefinitions>

            <!--#region Menu-->
            <Border Grid.Row="0" Grid.Column="0">
                <Grid >
                    <StackPanel>
                        <ListView x:Name="Menu">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectionMenuCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListViewItem >
                                <DockPanel>
                                    <Canvas x:Name="SettingCanvas" Style="{StaticResource canvasMenu}"></Canvas>
                                    <TextBlock Text="{Binding TaskBarViewModel.Languages.MenuLanguage.Setting,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="13"></TextBlock>
                                </DockPanel>
                            </ListViewItem>
                            <ListViewItem>
                                <DockPanel>
                                    <Canvas x:Name="GeometryCanvas" Style="{StaticResource canvasMenu}"></Canvas>
                                    <TextBlock Text="{Binding TaskBarViewModel.Languages.MenuLanguage.Geometry,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="13"></TextBlock>
                                </DockPanel>
                            </ListViewItem>
                            <ListViewItem x:Name="PileDetailListViewItem"  >
                                <DockPanel>
                                    <Canvas x:Name="PileDetailCanvas" Style="{StaticResource canvasMenu}"></Canvas>
                                    <TextBlock Text="{Binding TaskBarViewModel.Languages.MenuLanguage.PileDetail,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="13"></TextBlock>
                                </DockPanel>
                            </ListViewItem>
                            <ListViewItem x:Name="ReinforcementListViewItem" >
                                <DockPanel>
                                    <Canvas x:Name="ReinforcementCanvas" Style="{StaticResource canvasMenu}"></Canvas>
                                    <TextBlock Text="{Binding TaskBarViewModel.Languages.MenuLanguage.Reinforcement,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="13"></TextBlock>
                                </DockPanel>
                            </ListViewItem>
                        </ListView>
                        <ContentControl Margin="0 5 0 0" Content="{Binding ActionViewModel}"></ContentControl>
                    </StackPanel>
                </Grid>
            </Border>
            <!--#endregion-->
            <!--#region UserControl-->
            <Grid Grid.Row="0" Grid.Column="1">
                <ContentControl Content="{Binding SelectedViewModel}"></ContentControl>
            </Grid>
            <!--#endregion-->
            <!--#region CanvasMain-->
            <GroupBox Grid.Row="0" Grid.Column="2" Margin="5" Header="{Binding TaskBarViewModel.Languages.R11_Language.MenuLanguage.FoundationHeader,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Background="White">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" x:Name="scrollViewer">
                    <Grid>
                        <Canvas x:Name="MainCanvas" >

                        </Canvas>
                        <Canvas Grid.Row="6" Width="140" Height="60" x:Name="CanvasRebarImage" ></Canvas>

                    </Grid>
                </ScrollViewer>

            </GroupBox>
            <!--#endregion-->
            <!--#region Action-->
            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 5 0 0">
                <ContentControl Content="{Binding StatusBarViewModel}"></ContentControl>
                <!--<DockPanel Background="White" LastChildFill="true">
                    
                    

                    --><!--<RadioButton IsEnabled="{Binding UseDetailItem,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Grid.Column="0" IsChecked="{Binding ColumnsModel.IsDetailItem,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Content="Detail Item" Style="{StaticResource RadioButtonStyle}"></RadioButton>
                <RadioButton Grid.Column="1" IsChecked="{Binding ColumnsModel.IsRebar,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Content="Rebar" Style="{StaticResource RadioButtonStyle}"></RadioButton>--><!--
                    <Button DockPanel.Dock="Right" Content="{Binding TaskBarViewModel.Languages.WindowLanguage.Cancel,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Style="{StaticResource ButtonStyle}"   Width="80"
                        Command="{Binding CancelCommand}" CommandParameter="{Binding ElementName=MainWindow}"></Button>
                    <Button DockPanel.Dock="Right" Content="{Binding TaskBarViewModel.Languages.WindowLanguage.R11_CreateReinforcement,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Style="{StaticResource ButtonStyle}" Width="150"
                        Command="{Binding CreateReinforcementCommand}" CommandParameter="{Binding ElementName=MainWindow}"></Button>
                    <Button DockPanel.Dock="Right" Content="{Binding TaskBarViewModel.Languages.WindowLanguage.R11_CreatePileDetail,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Style="{StaticResource ButtonStyle}"   Width="150"
                        Command="{Binding CreatePileDetailCommand}" CommandParameter="{Binding ElementName=MainWindow}"></Button>
                    <Button DockPanel.Dock="Right" Content="{Binding TaskBarViewModel.Languages.WindowLanguage.R11_CreateFoundationPile,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  Style="{StaticResource ButtonStyle}"   Width="150"
                        Command="{Binding CreateFoundationCommand}" CommandParameter="{Binding ElementName=MainWindow}" ></Button>
                    <Grid DockPanel.Dock="Right">
                        <ProgressBar Background="Transparent" x:Name="ProgressWindow" Style="{StaticResource ProgressBarStyle}"></ProgressBar>
                        <TextBlock Text="{Binding FoundationPileModel.Percent,StringFormat={}{0:0}%,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Style="{StaticResource DataGridTextBlockCenter}" ></TextBlock>
                    </Grid>
                    
                   

                </DockPanel>-->
            </Border>
            <!--#endregion-->
        </Grid>
       
    </Grid>
</Window>
